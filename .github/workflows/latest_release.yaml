name: dev build release

on:
  push:
      branches:
        - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and deploy locally
      run: |
        sudo apt-get update && sudo apt-get install -y libxml2-dev libxslt1-dev
        python -m pip install --upgrade pip
        pip install .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: ðŸ’½ Building & testing distribution
      run: |
        rm -rf dist proddist testdist
        python3 bootstrap.py
        bin/buildout
        bin/test
        bin/buildout setup . egg_info --tag-build $(date --utc '+%Y%m%d%H%M%S')  sdist --dist-dir testdist
    # the releases are available on https://github.com/NASA-PDS/<you repo>/releases
    - name: Clean previous dev/snapsoht tags
      run: |
        git fetch --prune --unshallow --tags
        git tag -l | grep 'dev' | xargs -t -I arg sh -c 'git tag -d arg;git push --delete origin arg;'
    - name: Publish new snapshot release
      run: |
        pip install pds-github-util
        python-snapshot-release --token ${{ secrets.GITHUB_TOKEN }}
    - name: ðŸ“‡ Publishing to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{secrets.test_pypi_upload_token}}
        repository_url: https://test.pypi.org/legacy/
        packages_dir: testdist/
    # the changelog will be available on https://nasa-pds.github.io/<your repo>/pdsen-corral/CHANGELOG
    - uses: actions/checkout@v2
      with:
        ref: gh-pages
    - name: Create requirements report
      run: echo ::set-env name=REQUIREMENT_FILE::$(requirement-report --organization NASA-PDS --repository pds-deep-archive --token ${{ secrets.GITHUB_TOKEN }} --output pdsen-corral --dev --format html)
    - name: Create changelog
      run: |
        sudo gem install github_changelog_generator
        github_changelog_generator --user NASA-PDS --project pds-deep-archive --output pdsen-corral/CHANGELOG.md --token ${{ secrets.GITHUB_TOKEN }} --configure-sections '{"improvements":{"prefix":"**Improvements:**","labels":["enhancement"]},"defects":{"prefix":"**Defects:**","labels":["bug"]},"deprecations":{"prefix":"**Deprecations:**","labels":["deprecation"]}}' --no-pull-requests
    - name: Commit CHANGELOG.md and requirement files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        echo "commit pdsen-corral/CHANGELOG.md and ${{ env.REQUIREMENT_FILE }}on gh-pages branch"
        git add pdsen-corral/CHANGELOG.md ${{ env.REQUIREMENT_FILE }}
        git commit -m "update changelog and requirements" --allow-empty
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages
